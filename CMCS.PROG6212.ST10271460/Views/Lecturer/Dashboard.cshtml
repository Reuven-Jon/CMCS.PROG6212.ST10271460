@model IEnumerable<CMCS.PROG6212.ST10271460.Models.Claim>
<link rel="stylesheet" href="~/css/styles.css">

<div class="container mt-5">
    <h2 class="text-center" style="color: #4CAF50;">Lecturer Dashboard</h2>

    <!-- Form to Submit a Claim -->
    <div class="card mt-4">
        <h3>Submit a New Claim</h3>
        <form id="claim-form" enctype="multipart/form-data">
            <div class="form-group">
                <label for="ClaimPeriod">Claim Period:</label>
                <input type="month" id="ClaimPeriod" name="ClaimPeriod" class="form-control" required />
            </div>
            <div class="form-group">
                <label for="HoursWorked">Hours Worked:</label>
                <input type="number" id="HoursWorked" name="HoursWorked" class="form-control" required />
            </div>
            <div class="form-group">
                <label for="HourlyRate">Hourly Rate:</label>
                <input type="number" id="HourlyRate" name="HourlyRate" class="form-control" required />
            </div>
            <div class="form-group">
                <label for="AdditionalNotes">Additional Notes:</label>
                <textarea id="AdditionalNotes" name="AdditionalNotes" class="form-control"></textarea>
            </div>
            <div class="form-group">
                <label for="Document">Upload PDF Document:</label>
                <input type="file" id="Document" name="Document" accept="application/pdf" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary">Submit Claim</button>
        </form>
    </div>

    <!-- Display Existing Claims -->
    <!-- Show Lecturer Claims -->
    <div class="card mt-4">
        <h3>Your Claims</h3>
        <table border="1" cellpadding="10" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th>Claim Period</th>
                    <th>Hours Worked</th>
                    <th>Hourly Rate</th>
                    <th>Amount</th>
                    <th>Status</th>
                    <th>Submitted Date</th>
                    <th>Document</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var claim in Model)
                {
                    <tr>
                        <td>@claim.ClaimPeriod.ToString("MMMM yyyy")</td>
                        <td>@claim.HoursWorked</td>
                        <td>@claim.HourlyRate.ToString("C")</td>
                        <td>@claim.Amount.ToString("C")</td>
                        <td>@claim.Status</td>
                        <td>@claim.DateSubmitted.ToString("dd MMM yyyy")</td>
                        <td>
                            @if (!string.IsNullOrEmpty(claim.DocumentPath))
                            {
                                <a href="@claim.DocumentPath" target="_blank" class="btn btn-info">View Document</a>
                            }
                            else
                            {
                                <span>No document</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>



<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/claimHub")
        .build();

    connection.start().catch(err => console.error(err.toString()));

    // Submit Claim form
    $('#claim-form').on('submit', function (e) {
        e.preventDefault();

        const claimData = {
            ClaimPeriod: $('#ClaimPeriod').val(),
            HoursWorked: $('#HoursWorked').val(),
            HourlyRate: $('#HourlyRate').val(),
            Notes: $('#AdditionalNotes').val(),
        };

        const formData = new FormData(this);

        $.ajax({
            url: '/Lecturer/SubmitClaim', // Endpoint to submit claim
            type: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function (response) {
                connection.invoke('SendClaim', '@Context.Session.GetString("Username")', JSON.stringify(claimData), claimData.Notes)
                    .catch(err => console.error(err.toString()));

                alert('Claim submitted successfully');
            }
        });
    });

    connection.on("ReceiveClaimStatusUpdate", function (claimId, status, managerNote) {
        alert(`Your claim with ID ${claimId} has been ${status}: ${managerNote}`);
        location.reload(); // Refresh to update claim statuses
    });
</script>


<style>
    .popup-container {
        display: none;
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        z-index: 1000;
    }

    .popup-message {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 200px;
        height: 200px;
        border-radius: 50%;
        font-size: 24px;
        color: white;
        text-align: center;
    }

        .popup-message.approved {
            background-color: green;
            animation: bounce 2s infinite;
        }

        .popup-message.rejected {
            background-color: red;
            animation: bounce 2s infinite;
        }

    .card {
        padding: 20px;
        margin-bottom: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
</style>





